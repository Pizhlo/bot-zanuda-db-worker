operations: # операции, которые можно выполнить над моделью
  - name: create_notes
    timeout: 10000
    type: create
    storage: 
      - name: postgres_notes # хранилище, в котором нужно производить операцию из списка storages (если несколько - будет сохраняться транзакцией)
        table: notes.notes # название таблицы, в которой будет храниться модель
    fields: # поля в сообщении, необходимые для операции
      - name: user_id
        type: int64
        required: true
      - name: text
        type: string
        required: true
    request: # каким образом будет получен запрос на операцию
      from: rabbit_notes_create # соединение, из которого будет получен запрос. должно быть в списке connections

  - name: update_users
    type: update
    timeout: 500
    storage: 
      - name: postgres_users # хранилище, в котором нужно производить операцию из списка storages (если несколько - будет сохраняться транзакцией)
        table: users.users # название таблицы, в которой будет храниться модель
    fields: # поля в сообщении, необходимые для операции
      - name: user_id
        type: int64
        required: true
        validation:
          - type: min
            value: 10000
      - name: name
        type: string
        required: true
        validation:
          - type: not_empty
      - name: email
        type: string
        required: true
        validation:
          - type: not_empty
      - name: age
        type: int64
        required: true
        validation:
          - type: min
            value: 18
          - type: max
            value: 100
      - name: is_active
        type: bool
        required: true
        validation:
          - type: expected_value
            value: true
    where: # ... where (user_id = 10 and name = "test") and is_active = true
      - type: and 
        conditions: # (user_id = 10 and name = "test")
          - type: and
            fields:
              - name: user_id
                type: int64 # если значение установлено, то оно будет использовано для сравнения
                operator: =
              - name: name
                type: string
                operator: =
          - fields: # AND (is_active = true)
              - name: is_active
                type: bool
                value: true
                operator: =
    request: # каким образом будет получен запрос на операцию
      from: rabbit_users_update # соединение, из которого будет получен запрос. должно быть в списке connections
        

connections: # соединения для получения сообщений
  - name: "rabbit_notes_create"
    type: rabbitmq
    address: "amqp://<user>:<password>@localhost:1234/"
    queue: notes
    routing_key: create
    insert_timeout: 1
    read_timeout: 1

  - name: "rabbit_users_update"
    type: rabbitmq
    address: "amqp://<user>:<password>@localhost:1234/"
    queue: users_update_queue
    routing_key: update
    insert_timeout: 1
    read_timeout: 1

storages: # куда сохранять модели
  - name: "postgres_notes" # куда сохранять
    type: postgres
    host: localhost
    port: 5432
    user: "user"
    password: "password"
    db_name: "test1"    
    insert_timeout: 5000000
    read_timeout: 5000000

  - name: "postgres_users"
    type: postgres
    host: 10.8.0.1
    port: 5435
    user: "user"
    password: "password"
    db_name: "test2"    
    insert_timeout: 5000000
    read_timeout: 5000000