// Code generated by MockGen. DO NOT EDIT.
// Source: update_handler.go

// Package handler is a generated GoMock package.
package handler

import (
	context "context"
	interfaces "db-worker/internal/service/message/interface"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocknoteUpdater is a mock of noteUpdater interface.
type MocknoteUpdater struct {
	ctrl     *gomock.Controller
	recorder *MocknoteUpdaterMockRecorder
}

// MocknoteUpdaterMockRecorder is the mock recorder for MocknoteUpdater.
type MocknoteUpdaterMockRecorder struct {
	mock *MocknoteUpdater
}

// NewMocknoteUpdater creates a new mock instance.
func NewMocknoteUpdater(ctrl *gomock.Controller) *MocknoteUpdater {
	mock := &MocknoteUpdater{ctrl: ctrl}
	mock.recorder = &MocknoteUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocknoteUpdater) EXPECT() *MocknoteUpdaterMockRecorder {
	return m.recorder
}

// UpdateNotes mocks base method.
func (m *MocknoteUpdater) UpdateNotes(ctx context.Context, note []interfaces.Message) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateNotes", ctx, note)
}

// UpdateNotes indicates an expected call of UpdateNotes.
func (mr *MocknoteUpdaterMockRecorder) UpdateNotes(ctx, note interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNotes", reflect.TypeOf((*MocknoteUpdater)(nil).UpdateNotes), ctx, note)
}
